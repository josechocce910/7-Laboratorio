<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCalcular.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnLimpiar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>